#!/bin/bash

if [ "$#" -lt 1 ]; then
    echo "Invalid number of arguments"
    echo "Usage: ./sync robot-hostname"
    exit
fi

robot=$1
toolchain="rinobot-robot"
sudo=false
ssh=false
root=false
services=false
home=true
restart=false
build=false
configure=false
uninstall=false
clear=false
pwd="nao"
user="nao"

nextIsPwd=false
nextIsUser=false
ct=0
for i in "$@" ; do 
    if [ $nextIsPwd == true ] ; then
	pwd=$i
	nextIsPwd=false
    elif [ $nextIsUser == true ] ; then
	user=$i
	nextIsUser=false
    elif [[ $i == "--pwd" ]] ; then
        nextIsPwd=true
    elif [[ $i == "--user" ]] ; then
        nextIsUser=true
    elif [[ $i == "--sudo" ]] ; then
        sudo=true
    elif [[ $i == "--clear" ]] ; then
        clear=true
    elif [[ $i == "--ssh" ]] ; then
        ssh=true
    elif [[ $i == "--root" ]] ; then
        root=true
    elif [[ $i == "--services" ]] ; then
        services=true
    elif [[ $i == "--not-home" ]] ; then
        home=false
    elif [[ $i == "--restart" ]] ; then
        restart=true
    elif [[ $i == "--build" ]] ; then
        build=true
    elif [[ $i == "--uninstall" ]] ; then
        uninstall=true
    elif [[ $i == "--configure" ]] ; then
        configure=true
    elif [[ $i == "--initial" ]] ; then
        configure=true
        build=true
        sudo=true
        ssh=true
        root=true
        services=true
        home=true
        restart=true
    elif [[ $i == "--all" ]] ; then
        build=true
        sudo=true
        ssh=true
        root=true
        services=true
        home=true
        restart=true
    elif [[ $i == "--almost-all" ]] ; then
        build=true
        sudo=true
        ssh=true
        root=true
        services=true
        home=true
    elif [[ $ct -gt 0 ]]; then
        toolchain=$i
    fi
    ct=$((ct+1))
done

echo "Syncing build $toolchain to $robot"

SSH_CMD="sshpass -p $pwd ssh -o StrictHostKeyChecking=no -o ControlMaster=auto -o ControlPath=/tmp/control_%l_%h_%p_%r"

if [ $clear == true ]; then
    echo "Cleaning $toolchain"
    rm -rf src/build-$toolchain
    exit
fi

if [ $uninstall == true ]; then
    echo "Uninstalling from $robot"
    exit
fi

if [ $build == true ]; then
    if [ $configure == true ]; then
        ./build $2 -configure
    else
        ./build $2
    fi
fi

if [ $ssh == true ]; then
    echo "Sync keys"
    rm ~/.ssh/known_hosts
    if [ ! -f ~/.ssh/id_rsa ]; then
        ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -P ""
    fi
    ssh-keyscan $robot >> ~/.ssh/known_hosts
    #ssh-copy-id $user@$robot
fi

if [ $sudo == true ]; then
    echo "Disable sudo"
    $SSH_CMD -t -l nao $robot "su -c 'tee /etc/sudoers <<< \"nao     ALL=(ALL) NOPASSWD:ALL\" && chmod 0440 /etc/sudoers && chown root:root /etc/sudoers'"
fi

echo "Placing files"
cp src/build-$toolchain/sdk/bin/rinobot root/home/nao/
cp src/build-$toolchain/sdk/lib/libagent.so root/home/nao/naoqi/preferences/libagent.so
chmod +x root/home/nao/rinobot

if [ $root == true ]; then
    echo "Sync root"
    sshpass -p $pwd rsync -aburvP --rsync-path="sudo rsync" root/etc $user@$robot:/
fi

if [ $home == true ]; then
    echo "Sync home"
    sshpass -p $pwd rsync -aurvP root/home/nao/ $user@$robot:~/
fi

if [ $services == true ]; then
    echo "Turning off services we do not use"
    $SSH_CMD $user@$robot "sudo rc-update add connman boot"
    $SSH_CMD $user@$robot "sudo rc-update del connman boot"
    $SSH_CMD $user@$robot "sudo rc-update add qimessaging-json default"
    $SSH_CMD $user@$robot "sudo rc-update del qimessaging-json default"
    echo "Turning on services needed"
    $SSH_CMD $user@$robot "sudo rc-update del ntp-client default"
    $SSH_CMD $user@$robot "sudo rc-update add ntp-client default"
fi

if [ $restart == true ]; then
    echo "Restart Naoqi"
    $SSH_CMD $user@$robot "sudo /etc/init.d/naoqi restart"
fi
